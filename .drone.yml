pipeline:

  build-project:
    image: quay.io/ukhomeofficedigital/openjdk8
    commands:
      - export SPRING_PROFILES_ACTIVE='development, local'
      - export SERVER_PORT='8080'
      - export CASE_QUEUE_NAME='case-queue'
      - export CASE_QUEUE_DLQ_NAME='case-queue-dlq'
      - export DB_HOST='postgres'
      - export AWS_LOCAL_HOST='localstack'
      - ./gradlew cleanTest build --no-daemon --max-workers 2
    when:
      event: [push, pull_request, tag]

  sonar-scanner:
    image: quay.io/ukhomeofficedigital/sonar-scanner:v3.0.2
    when:
      event: [push, pull_request, tag]

  docker-build:
    image: docker:17.09.1
    environment:
      - DOCKER_HOST=tcp://172.17.0.1:2375
    commands:
      - docker build -t hocs-search .
    when:
      branch: [master, versioning, refs/tags/*]
      event: [push, tag]

  install-docker-image:
    image: docker:17.09.1
    environment:
      - DOCKER_HOST=tcp://172.17.0.1:2375
    secrets:
      - docker_password
    commands:
      - docker login -u="ukhomeofficedigital+hocs" -p=$${DOCKER_PASSWORD} quay.io
      - docker tag hocs-search quay.io/ukhomeofficedigital/hocs-casework:build-$${DRONE_BUILD_NUMBER}
      - docker tag hocs-search quay.io/ukhomeofficedigital/hocs-casework:latest
      - docker push quay.io/ukhomeofficedigital/hocs-casework:build-$${DRONE_BUILD_NUMBER}
      - docker push quay.io/ukhomeofficedigital/hocs-casework:latest
    when:
      branch: [master]
      event: push

  docker-semver-tag:
    image: quay.io/ukhomeofficedigital/hocs-version-bot:build-18
    environment:
      - DOCKER_HOST=tcp://172.17.0.1:2375
      - DOCKER_API_VERSION=1.37
    secrets:
      - github_password
      - docker_password
    commands:
      - /app/hocs-deploy --version=$${SEMVER} --service=hocs-casework --gitToken=$${GITHUB_PASSWORD} --gitRepo="https://gitlab.digital.homeoffice.gov.uk/hocs/hocs-versions.git" --environment=qa --dockerRepository=quay.io/ukhomeofficedigital --sourceBuild=$${IMAGE_VERSION} --registryUser=ukhomeofficedigital+hocs --registryPassword=$${DOCKER_PASSWORD}
    when:
      event: deployment
      environment: qa

  clone-kube-project:
    image: plugins/git
    commands:
      - git clone https://github.com/UKHomeOffice/kube-hocs-casework.git
    when:
      event: [push, tag, deployment]

  deploy-to-qa:
    image: quay.io/ukhomeofficedigital/kd:v0.8.0
    environment:
      - KUBE_NAMESPACE=cs-qa
      - ENVIRONMENT=qa
      - KUBE_SERVER=https://kube-api-notprod.notprod.acp.homeoffice.gov.uk
    secrets:
      - hocs_casework_qa
    commands:
      - source version.txt
      - echo $VERSION
      - cd kube-hocs-casework
      - ./deploy.sh
    when:
      event: deployment
      environment: qa

  deploy-to-dev-from-build-number:
    image: quay.io/ukhomeofficedigital/kd:v0.8.0
    environment:
      - KUBE_NAMESPACE=cs-dev
      - ENVIRONMENT=dev
      - VERSION=build-${DRONE_BUILD_NUMBER}
      - KUBE_SERVER=https://kube-api-notprod.notprod.acp.homeoffice.gov.uk
    secrets:
      - hocs_casework_dev
    commands:
      - cd kube-hocs-casework
      - ./deploy.sh
    when:
      branch: master
      event: [push, tag]

  deployment:
    image: quay.io/ukhomeofficedigital/kd:v0.8.0
    environment:
      - KUBE_NAMESPACE=cs-${DRONE_DEPLOY_TO}
      - ENVIRONMENT=${DRONE_DEPLOY_TO}
      - KUBE_SERVER=https://kube-api-notprod.notprod.acp.homeoffice.gov.uk
    secrets:
      - hocs_casework_dev
      - hocs_casework_demo
      - hocs_casework_qa
    commands:
      - cd kube-hocs-casework
      - ./deploy.sh
    when:
      event: deployment
      environment: [dev, demo]

  deploy-to-prod:
    image: quay.io/ukhomeofficedigital/kd:v0.8.0
    environment:
      - KUBE_NAMESPACE=cs-prod
      - ENVIRONMENT=prod
      - VERSION=${IMAGE_VERSION}
      - KUBE_SERVER=https://kube-api-prod.prod.acp.homeoffice.gov.uk
    secrets:
      - hocs_casework_prod
    commands:
      - cd kube-hocs-casework
      - ./deploy.sh
    when:
      event: deployment
      environment: prod

services:
  postgres:
    image: quay.io/ukhomeofficedigital/postgres-alpine
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: dev
  localstack:
    image: localstack/localstack:latest
    environment:
      HOSTNAME_EXTERNAL: localstack
      DEFAULT_REGION: eu-west-2
      SERVICES: sqs,s3
  aws_cli:
    image: garland/aws-cli-docker
    command:
      - /bin/sh
      - -c
      - |
          aws --endpoint-url=http://localstack:4572 s3 mb s3://untrusted-bucket
          aws --endpoint-url=http://localstack:4572 s3 mb s3://trusted-bucket
          aws --endpoint-url=http://localstack:4576 sqs create-queue --queue-name case-queue
          aws --endpoint-url=http://localstack:4576 sqs create-queue --queue-name case-queue-dlq
          aws --endpoint-url=http://localstack:4576 sqs create-queue --queue-name document-queue
          aws --endpoint-url=http://localstack:4576 sqs create-queue --queue-name document-queue-dlq
          aws --endpoint-url=http://localstack:4576 sqs create-queue --queue-name reporting-queue
          aws --endpoint-url=http://localstack:4576 sqs create-queue --queue-name reporting-queue-dlq
    environment:
      AWS_ACCESS_KEY_ID: UNSET
      AWS_SECRET_ACCESS_KEY: UNSET
      AWS_DEFAULT_REGION: 'eu-west-2'
  #selenium:
  #  image: selenium/hub

  #chrome:
  #  image: selenium/node-chrome
  #  environment:
  #    HUB_PORT_4444_TCP_ADDR: selenium
  #    HUB_PORT_4444_TCP_PORT: "4444"
  #    DISPLAY: ":99.0"

  #firefox:
  #  image: selenium/node-firefox
  #  environment:
  #    HUB_PORT_4444_TCP_ADDR: selenium
  #    HUB_PORT_4444_TCP_PORT: "4444"
  #    DISPLAY: ":98.0"
